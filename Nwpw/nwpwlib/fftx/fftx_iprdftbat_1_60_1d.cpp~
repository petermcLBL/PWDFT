
/*
 * This code was generated by Spiral 8.3.1d01, www.spiral.net
 */

#include <omega64.h>
static double D1[8];
static double D2[32];

extern "C" {
void init_fftx_iprdftbat_1_60_1d() {
    for(int i1 = 0; i1 <= 1; i1++) {
        for(int i11 = 0; i11 <= 1; i11++) {
            D1[((4*i1) + (2*i11))] = cospi((((double )(2*((i1 + 1)*i11))) / 60));
            D1[(1 + (4*i1) + (2*i11))] = sinpi((((double )(2*((i1 + 1)*i11))) / 60));
        }
    }
    for(int i1 = 0; i1 <= 1; i1++) {
        for(int i11 = 0; i11 <= 1; i11++) {
            for(int i31 = 0; i31 <= 1; i31++) {
                D2[((16*i1) + (8*i11) + (4*i31))] = cospi((((double )(2*((i1 + 1)*((2*powmod(1, 2, i31, 5)) + i11)))) / 60));
                D2[(1 + (16*i1) + (8*i11) + (4*i31))] = sinpi((((double )(2*((i1 + 1)*((2*powmod(1, 2, i31, 5)) + i11)))) / 60));
                D2[(2 + (16*i1) + (8*i11) + (4*i31))] = cospi((((double )(2*((i1 + 1)*((2*powmod(1, 2, (2 + i31), 5)) + i11)))) / 60));
                D2[(3 + (16*i1) + (8*i11) + (4*i31))] = sinpi((((double )(2*((i1 + 1)*((2*powmod(1, 2, (2 + i31), 5)) + i11)))) / 60));
            }
        }
    }
}
}

extern "C" {
void fftx_iprdftbat_1_60_1d(double  *Y, double  *X) {
    static double T1[80];
    double s47, s48, s49, s50, s51, s52, s53, s54, 
            s55, s56, s57, s58, s59, s60, t101, t102, 
            t103, t104, t105, t106, t107, t108;
    s47 = (*(X) + *((X + 60)));
    s48 = (*(X) - *((X + 60)));
    t101 = (*((X + 12)) + *((X + 48)));
    t102 = (*((X + 13)) - *((X + 49)));
    t103 = (*((X + 12)) - *((X + 48)));
    t104 = (*((X + 13)) + *((X + 49)));
    s49 = ((0.80901699437494745*t103) - (0.58778525229247314*t104));
    s50 = ((0.58778525229247314*t103) + (0.80901699437494745*t104));
    t105 = (*((X + 24)) + *((X + 36)));
    t106 = (*((X + 25)) - *((X + 37)));
    t107 = (*((X + 24)) - *((X + 36)));
    t108 = (*((X + 25)) + *((X + 37)));
    s51 = ((0.3090169943749474*t107) - (0.95105651629515353*t108));
    s52 = ((0.95105651629515353*t107) + (0.3090169943749474*t108));
    s53 = ((s47 + (0.61803398874989479*t101)) - (1.6180339887498949*t105));
    s54 = ((s47 - (1.6180339887498949*t101)) + (0.61803398874989479*t105));
    s55 = ((1.9021130325903071*t102) + (1.1755705045849463*t106));
    s56 = ((1.1755705045849463*t102) - (1.9021130325903071*t106));
    *(T1) = (s47 + (2.0*t101) + (2.0*t105));
    *((T1 + 16)) = (s53 - s55);
    *((T1 + 64)) = (s53 + s55);
    *((T1 + 48)) = (s54 + s56);
    *((T1 + 32)) = (s54 - s56);
    s57 = (((0.61803398874989479*s49) - (1.6180339887498949*s51)) + s48);
    s58 = (((0.61803398874989479*s51) - (1.6180339887498949*s49)) + s48);
    s59 = ((1.9021130325903071*s50) + (1.1755705045849463*s52));
    s60 = ((1.1755705045849463*s50) - (1.9021130325903071*s52));
    *((T1 + 8)) = ((2.0*s49) + (2.0*s51) + s48);
    *((T1 + 24)) = (s57 - s59);
    *((T1 + 72)) = (s57 + s59);
    *((T1 + 56)) = (s58 + s60);
    *((T1 + 40)) = (s58 - s60);
    for(int i1 = 0; i1 <= 1; i1++) {
        double s205, s206, s207, s208, s209, s210, s211, s212, 
                s213, s214, s215, s216, s217, s218, s219, s220, 
                s221, s222, s223, s224, s225, s226, s227, s228, 
                s229, s230, s231, s232, t265, t266, t267, t268, 
                t269, t270, t271, t272, t273, t274, t275, t276, 
                t277, t278, t279, t280, t281, t282, t283, t284, 
                t285, t286, t287, t288, t289, t290, t291, t292, 
                t293, t294, t295, t296, t297, t298, t299, t300, 
                t301, t302, t303, t304, t305, t306, t307, t308, 
                t309, t310, t311, t312, t313, t314, t315, t316;
        int a570, a571, a572, a573, a574, a575, a576, a577, 
                a578, a579, a580, a581, a582, a583, a584, a585, 
                a586, a587, a588, a589, a590, a591, a592, a593, 
                a594, a595, a596, a597, a598, a599, a600, a601, 
                a602, a603, a604, a605, a606, a607, a608, a609, 
                a610, a611;
        a570 = (2*i1);
        a571 = (a570 + 2);
        a572 = (a570 + 3);
        a573 = -(a570);
        a574 = (a573 + 58);
        a575 = (a573 + 59);
        t265 = (*((X + a571)) + *((X + a574)));
        t266 = (*((X + a572)) - *((X + a575)));
        t267 = (*((X + a571)) - *((X + a574)));
        t268 = (*((X + a572)) + *((X + a575)));
        a576 = (a570 + 14);
        a577 = (a570 + 15);
        a578 = (a573 + 46);
        a579 = (a573 + 47);
        t269 = (*((X + a576)) + *((X + a578)));
        t270 = (*((X + a577)) - *((X + a579)));
        t271 = (*((X + a576)) - *((X + a578)));
        t272 = (*((X + a577)) + *((X + a579)));
        s205 = ((0.80901699437494745*t271) - (0.58778525229247314*t272));
        s206 = ((0.58778525229247314*t271) + (0.80901699437494745*t272));
        a580 = (a570 + 26);
        a581 = (a570 + 27);
        a582 = (a573 + 34);
        a583 = (a573 + 35);
        t273 = (*((X + a580)) + *((X + a582)));
        t274 = (*((X + a581)) - *((X + a583)));
        t275 = (*((X + a580)) - *((X + a582)));
        t276 = (*((X + a581)) + *((X + a583)));
        s207 = ((0.3090169943749474*t275) - (0.95105651629515353*t276));
        s208 = ((0.95105651629515353*t275) + (0.3090169943749474*t276));
        a584 = (a570 + 38);
        a585 = (a570 + 39);
        a586 = (a573 + 22);
        a587 = (a573 + 23);
        t277 = (*((X + a584)) + *((X + a586)));
        t278 = (*((X + a585)) - *((X + a587)));
        t279 = (*((X + a584)) - *((X + a586)));
        t280 = (*((X + a585)) + *((X + a587)));
        s209 = ((0.3090169943749474*t279) + (0.95105651629515353*t280));
        s210 = ((0.95105651629515353*t279) - (0.3090169943749474*t280));
        a588 = (a570 + 50);
        a589 = (a570 + 51);
        a590 = (a573 + 10);
        a591 = (a573 + 11);
        t281 = (*((X + a588)) + *((X + a590)));
        t282 = (*((X + a589)) - *((X + a591)));
        t283 = (*((X + a588)) - *((X + a590)));
        t284 = (*((X + a589)) + *((X + a591)));
        s211 = ((0.80901699437494745*t283) + (0.58778525229247314*t284));
        s212 = ((0.58778525229247314*t283) - (0.80901699437494745*t284));
        t285 = (t269 + t281);
        t286 = (t270 + t282);
        t287 = (t269 - t281);
        t288 = (t270 - t282);
        t289 = (t277 + t273);
        t290 = (t278 + t274);
        t291 = (t277 - t273);
        t292 = (t278 - t274);
        s213 = (t265 + t285 + t289);
        s214 = (t286 + t290 + t266);
        s215 = ((t265 + (0.3090169943749474*t285)) - (0.80901699437494745*t289));
        s216 = (((0.3090169943749474*t286) - (0.80901699437494745*t290)) + t266);
        s217 = ((t265 - (0.80901699437494745*t285)) + (0.3090169943749474*t289));
        s218 = (((0.3090169943749474*t290) - (0.80901699437494745*t286)) + t266);
        s219 = ((0.58778525229247314*t292) - (0.95105651629515353*t288));
        s220 = ((0.95105651629515353*t287) - (0.58778525229247314*t291));
        s221 = ((0.58778525229247314*t288) + (0.95105651629515353*t292));
        s222 = ((0.58778525229247314*t287) + (0.95105651629515353*t291));
        a592 = (4*i1);
        a593 = (a592 + 1);
        *((T1 + a571)) = ((*((D1 + a592))*s213) - (*((D1 + a593))*s214));
        *((T1 + a572)) = ((*((D1 + a593))*s213) + (*((D1 + a592))*s214));
        t293 = (s215 + s219);
        t294 = (s216 + s220);
        t295 = (s215 - s219);
        t296 = (s216 - s220);
        a594 = (16*i1);
        a595 = (a594 + 1);
        a596 = (a594 + 2);
        a597 = (a594 + 3);
        *((18 + T1 + a570)) = ((*((D2 + a594))*t293) - (*((D2 + a595))*t294));
        *((19 + T1 + a570)) = ((*((D2 + a595))*t293) + (*((D2 + a594))*t294));
        *((66 + T1 + a570)) = ((*((D2 + a596))*t295) - (*((D2 + a597))*t296));
        *((67 + T1 + a570)) = ((*((D2 + a597))*t295) + (*((D2 + a596))*t296));
        t297 = (s217 - s221);
        t298 = (s218 + s222);
        t299 = (s217 + s221);
        t300 = (s218 - s222);
        a598 = (a594 + 4);
        a599 = (a594 + 5);
        a600 = (a594 + 6);
        a601 = (a594 + 7);
        *((34 + T1 + a570)) = ((*((D2 + a598))*t297) - (*((D2 + a599))*t298));
        *((35 + T1 + a570)) = ((*((D2 + a599))*t297) + (*((D2 + a598))*t298));
        *((T1 + a588)) = ((*((D2 + a600))*t299) - (*((D2 + a601))*t300));
        *((T1 + a589)) = ((*((D2 + a601))*t299) + (*((D2 + a600))*t300));
        t301 = (s205 - s211);
        t302 = (s206 + s212);
        t303 = (s205 + s211);
        t304 = (s206 - s212);
        t305 = (s207 - s209);
        t306 = (s210 + s208);
        t307 = (s209 + s207);
        t308 = (s210 - s208);
        s223 = (t267 + t301 + t305);
        s224 = (t268 + t302 + t306);
        s225 = (((0.3090169943749474*t301) - (0.80901699437494745*t305)) + t267);
        s226 = ((t268 + (0.3090169943749474*t302)) - (0.80901699437494745*t306));
        s227 = (((0.3090169943749474*t305) - (0.80901699437494745*t301)) + t267);
        s228 = ((t268 - (0.80901699437494745*t302)) + (0.3090169943749474*t306));
        s229 = ((0.58778525229247314*t308) - (0.95105651629515353*t304));
        s230 = ((0.95105651629515353*t303) + (0.58778525229247314*t307));
        s231 = ((0.58778525229247314*t304) + (0.95105651629515353*t308));
        s232 = ((0.58778525229247314*t303) - (0.95105651629515353*t307));
        a602 = (a592 + 2);
        a603 = (a592 + 3);
        *((10 + T1 + a570)) = ((*((D1 + a602))*s223) - (*((D1 + a603))*s224));
        *((11 + T1 + a570)) = ((*((D1 + a603))*s223) + (*((D1 + a602))*s224));
        t309 = (s225 + s229);
        t310 = (s226 + s230);
        t311 = (s225 - s229);
        t312 = (s226 - s230);
        a604 = (a594 + 8);
        a605 = (a594 + 9);
        a606 = (a594 + 10);
        a607 = (a594 + 11);
        *((T1 + a580)) = ((*((D2 + a604))*t309) - (*((D2 + a605))*t310));
        *((T1 + a581)) = ((*((D2 + a605))*t309) + (*((D2 + a604))*t310));
        *((74 + T1 + a570)) = ((*((D2 + a606))*t311) - (*((D2 + a607))*t312));
        *((75 + T1 + a570)) = ((*((D2 + a607))*t311) + (*((D2 + a606))*t312));
        t313 = (s227 - s231);
        t314 = (s228 + s232);
        t315 = (s227 + s231);
        t316 = (s228 - s232);
        a608 = (a594 + 12);
        a609 = (a594 + 13);
        a610 = (a594 + 14);
        a611 = (a594 + 15);
        *((42 + T1 + a570)) = ((*((D2 + a608))*t313) - (*((D2 + a609))*t314));
        *((43 + T1 + a570)) = ((*((D2 + a609))*t313) + (*((D2 + a608))*t314));
        *((58 + T1 + a570)) = ((*((D2 + a610))*t315) - (*((D2 + a611))*t316));
        *((59 + T1 + a570)) = ((*((D2 + a611))*t315) + (*((D2 + a610))*t316));
    }
    double s297, s298, s299, s300, s301, s302, s303, s304, 
            t365, t366, t367, t368, t369, t370, t371, t372, 
            t373, t374, t375, t376, t377, t378, t379, t380;
    t365 = (*((X + 30)) + *((X + 18)));
    t366 = (*((X + 31)) - *((X + 19)));
    t367 = (*((X + 30)) - *((X + 18)));
    t368 = (*((X + 31)) + *((X + 19)));
    t369 = (*((X + 42)) + *((X + 54)));
    t370 = (*((X + 55)) - *((X + 43)));
    t371 = (*((X + 42)) - *((X + 54)));
    t372 = (*((X + 43)) + *((X + 55)));
    s297 = ((*((X + 6)) + (0.3090169943749474*t365)) - (0.80901699437494745*t369));
    s298 = ((*((X + 7)) + (0.3090169943749474*t366)) - (0.80901699437494745*t370));
    s299 = ((*((X + 6)) - (0.80901699437494745*t365)) + (0.3090169943749474*t369));
    s300 = ((*((X + 7)) - (0.80901699437494745*t366)) + (0.3090169943749474*t370));
    s301 = ((0.95105651629515353*t368) + (0.58778525229247314*t372));
    s302 = ((0.95105651629515353*t367) - (0.58778525229247314*t371));
    s303 = ((0.95105651629515353*t372) - (0.58778525229247314*t368));
    s304 = ((0.58778525229247314*t367) + (0.95105651629515353*t371));
    t373 = (s297 - s301);
    t374 = (s298 + s302);
    t375 = (s297 + s301);
    t376 = (s298 - s302);
    t377 = (s299 + s303);
    t378 = (s300 + s304);
    t379 = (s299 - s303);
    t380 = (s300 - s304);
    *((T1 + 6)) = (2.0*(*((X + 6)) + t365 + t369));
    *((T1 + 46)) = -((2.0*(*((X + 7)) + t366 + t370)));
    *((T1 + 14)) = ((1.9021130325903071*t373) - (0.61803398874989479*t374));
    *((T1 + 54)) = -(((0.61803398874989479*t373) + (1.9021130325903071*t374)));
    *((T1 + 22)) = ((1.6180339887498949*t377) - (1.1755705045849463*t378));
    *((T1 + 62)) = -(((1.1755705045849463*t377) + (1.6180339887498949*t378)));
    *((T1 + 30)) = ((1.1755705045849463*t379) - (1.6180339887498949*t380));
    *((T1 + 70)) = -(((1.6180339887498949*t379) + (1.1755705045849463*t380)));
    *((T1 + 38)) = ((0.61803398874989479*t375) - (1.9021130325903071*t376));
    *((T1 + 78)) = -(((1.9021130325903071*t375) + (0.61803398874989479*t376)));
    for(int i2 = 0; i2 <= 9; i2++) {
        double s340, s341, s342, s343, s344, s345, s346, t401, 
                t402, t403;
        int a753, a754, a755, a756, a757, a758;
        a753 = (8*i2);
        a754 = (a753 + 6);
        s340 = (*((T1 + a753)) + *((T1 + a754)));
        s341 = (*((T1 + a753)) - *((T1 + a754)));
        a755 = (a753 + 2);
        a756 = (a753 + 3);
        a757 = (a753 + 4);
        a758 = (a753 + 5);
        t401 = (*((T1 + a755)) + *((T1 + a757)));
        t402 = (*((T1 + a755)) - *((T1 + a757)));
        t403 = (*((T1 + a756)) + *((T1 + a758)));
        s342 = ((0.5*t402) - (0.8660254037844386*t403));
        s343 = (s340 - t401);
        s344 = (1.7320508075688772*(*((T1 + a756)) - *((T1 + a758))));
        *((Y + i2)) = (s340 + (2.0*t401));
        *((20 + Y + i2)) = (s343 - s344);
        *((40 + Y + i2)) = (s343 + s344);
        s345 = (s341 - s342);
        s346 = ((1.4999999999999998*t402) + (0.8660254037844386*t403));
        *((10 + Y + i2)) = (s341 + (2.0*s342));
        *((30 + Y + i2)) = (s345 - s346);
        *((50 + Y + i2)) = (s345 + s346);
    }
}
}

extern "C" {
void destroy_fftx_iprdftbat_1_60_1d() {
    /* skip */
}
}
