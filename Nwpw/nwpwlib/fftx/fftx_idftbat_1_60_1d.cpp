
/*
 * This code was generated by Spiral 8.3.0, www.spiral.net
 */

#include "omega64.h"
static double D1[40];
static double D2[80];

void init_fftx_idftbat_1_60_1d() {
    for(int i3 = 0; i3 <= 9; i3++) {
        for(int i10 = 0; i10 <= 1; i10++) {
            D1[((4*i3) + (2*i10))] = cospi((((double )(2*(i3*i10))) / 60));
            D1[(1 + (4*i3) + (2*i10))] = sinpi((((double )(2*(i3*i10))) / 60));
        }
    }
    for(int i3 = 0; i3 <= 9; i3++) {
        for(int i10 = 0; i10 <= 1; i10++) {
            D2[((8*i3) + (4*i10))] = cospi((((double )(2*(i3*(2 + i10)))) / 60));
            D2[(1 + (8*i3) + (4*i10))] = sinpi((((double )(2*(i3*(2 + i10)))) / 60));
            D2[(2 + (8*i3) + (4*i10))] = cospi((((double )(2*(i3*(4 + i10)))) / 60));
            D2[(3 + (8*i3) + (4*i10))] = sinpi((((double )(2*(i3*(4 + i10)))) / 60));
        }
    }
}

void fftx_idftbat_1_60_1d(double  *Y, double  *X) {
    static double T1[120];
    for(int i3 = 0; i3 <= 9; i3++) {
        double s100, s85, s86, s87, s88, s89, s90, s91, 
                s92, s93, s94, s95, s96, s97, s98, s99, 
                t129, t130, t131, t132, t133, t134, t135, t136, 
                t137, t138, t139, t140, t141, t142, t143, t144, 
                t145, t146, t147, t148, t149, t150, t151, t152;
        int a248, a249, a250, a251, a252, a253, a254, a255, 
                a256, a257, a258, a259, a260, a261, a262, a263, 
                a264, a265, a266, a267, a268, a269, a270, a271, 
                a272;
        a248 = (2*i3);
        a249 = (a248 + 1);
        a250 = (a248 + 60);
        a251 = (a248 + 61);
        t129 = (*((X + a248)) + *((X + a250)));
        t130 = (*((X + a249)) + *((X + a251)));
        t131 = (*((X + a248)) - *((X + a250)));
        t132 = (*((X + a249)) - *((X + a251)));
        a252 = (a248 + 20);
        a253 = (a248 + 21);
        a254 = (a248 + 80);
        a255 = (a248 + 81);
        t133 = (*((X + a252)) + *((X + a254)));
        t134 = (*((X + a253)) + *((X + a255)));
        t135 = (*((X + a252)) - *((X + a254)));
        t136 = (*((X + a253)) - *((X + a255)));
        s85 = ((0.5*t135) - (0.8660254037844386*t136));
        s86 = ((0.8660254037844386*t135) + (0.5*t136));
        a256 = (a248 + 40);
        a257 = (a248 + 41);
        a258 = (a248 + 100);
        a259 = (a248 + 101);
        t137 = (*((X + a256)) + *((X + a258)));
        t138 = (*((X + a257)) + *((X + a259)));
        t139 = (*((X + a256)) - *((X + a258)));
        t140 = (*((X + a257)) - *((X + a259)));
        s87 = ((0.5*t139) + (0.8660254037844386*t140));
        s88 = ((0.8660254037844386*t139) - (0.5*t140));
        t141 = (t133 + t137);
        t142 = (t134 + t138);
        s89 = (t129 + t141);
        s90 = (t130 + t142);
        s91 = (t129 - (0.5*t141));
        s92 = (t130 - (0.5*t142));
        s93 = (0.8660254037844386*(t134 - t138));
        s94 = (0.8660254037844386*(t133 - t137));
        a260 = (4*i3);
        a261 = (a260 + 1);
        a262 = (12*i3);
        *((T1 + a262)) = ((*((D1 + a260))*s89) - (*((D1 + a261))*s90));
        *((1 + T1 + a262)) = ((*((D1 + a261))*s89) + (*((D1 + a260))*s90));
        t143 = (s91 - s93);
        t144 = (s92 + s94);
        t145 = (s91 + s93);
        t146 = (s92 - s94);
        a263 = (8*i3);
        a264 = (a263 + 1);
        a265 = (a263 + 2);
        a266 = (a263 + 3);
        *((4 + T1 + a262)) = ((*((D2 + a263))*t143) - (*((D2 + a264))*t144));
        *((5 + T1 + a262)) = ((*((D2 + a264))*t143) + (*((D2 + a263))*t144));
        *((8 + T1 + a262)) = ((*((D2 + a265))*t145) - (*((D2 + a266))*t146));
        *((9 + T1 + a262)) = ((*((D2 + a266))*t145) + (*((D2 + a265))*t146));
        t147 = (s85 - s87);
        t148 = (s86 + s88);
        s95 = (t131 + t147);
        s96 = (t132 + t148);
        s97 = (t131 - (0.5*t147));
        s98 = (t132 - (0.5*t148));
        s99 = (0.8660254037844386*(s86 - s88));
        s100 = (0.8660254037844386*(s85 + s87));
        a267 = (a260 + 2);
        a268 = (a260 + 3);
        *((2 + T1 + a262)) = ((*((D1 + a267))*s95) - (*((D1 + a268))*s96));
        *((3 + T1 + a262)) = ((*((D1 + a268))*s95) + (*((D1 + a267))*s96));
        t149 = (s97 - s99);
        t150 = (s98 + s100);
        t151 = (s97 + s99);
        t152 = (s98 - s100);
        a269 = (a263 + 4);
        a270 = (a263 + 5);
        a271 = (a263 + 6);
        a272 = (a263 + 7);
        *((6 + T1 + a262)) = ((*((D2 + a269))*t149) - (*((D2 + a270))*t150));
        *((7 + T1 + a262)) = ((*((D2 + a270))*t149) + (*((D2 + a269))*t150));
        *((10 + T1 + a262)) = ((*((D2 + a271))*t151) - (*((D2 + a272))*t152));
        *((11 + T1 + a262)) = ((*((D2 + a272))*t151) + (*((D2 + a271))*t152));
    }
    for(int i2 = 0; i2 <= 5; i2++) {
        double s201, s202, s203, s204, s205, s206, s207, s208, 
                s209, s210, s211, s212, s213, s214, s215, s216, 
                s217, s218, s219, s220, s221, s222, s223, s224, 
                t293, t294, t295, t296, t297, t298, t299, t300, 
                t301, t302, t303, t304, t305, t306, t307, t308, 
                t309, t310, t311, t312, t313, t314, t315, t316, 
                t317, t318, t319, t320, t321, t322, t323, t324, 
                t325, t326, t327, t328;
        int a496, a497, a498, a499, a500, a501, a502, a503, 
                a504, a505, a506, a507, a508, a509, a510, a511, 
                a512, a513, a514, a515;
        a496 = (2*i2);
        a497 = (a496 + 1);
        a498 = (a496 + 60);
        a499 = (a496 + 61);
        t293 = (*((T1 + a496)) + *((T1 + a498)));
        t294 = (*((T1 + a497)) + *((T1 + a499)));
        t295 = (*((T1 + a496)) - *((T1 + a498)));
        t296 = (*((T1 + a497)) - *((T1 + a499)));
        a500 = (a496 + 12);
        a501 = (a496 + 13);
        a502 = (a496 + 72);
        a503 = (a496 + 73);
        t297 = (*((T1 + a500)) + *((T1 + a502)));
        t298 = (*((T1 + a501)) + *((T1 + a503)));
        t299 = (*((T1 + a500)) - *((T1 + a502)));
        t300 = (*((T1 + a501)) - *((T1 + a503)));
        s201 = ((0.80901699437494745*t299) - (0.58778525229247314*t300));
        s202 = ((0.58778525229247314*t299) + (0.80901699437494745*t300));
        a504 = (a496 + 24);
        a505 = (a496 + 25);
        a506 = (a496 + 84);
        a507 = (a496 + 85);
        t301 = (*((T1 + a504)) + *((T1 + a506)));
        t302 = (*((T1 + a505)) + *((T1 + a507)));
        t303 = (*((T1 + a504)) - *((T1 + a506)));
        t304 = (*((T1 + a505)) - *((T1 + a507)));
        s203 = ((0.3090169943749474*t303) - (0.95105651629515353*t304));
        s204 = ((0.95105651629515353*t303) + (0.3090169943749474*t304));
        a508 = (a496 + 36);
        a509 = (a496 + 37);
        a510 = (a496 + 96);
        a511 = (a496 + 97);
        t305 = (*((T1 + a508)) + *((T1 + a510)));
        t306 = (*((T1 + a509)) + *((T1 + a511)));
        t307 = (*((T1 + a508)) - *((T1 + a510)));
        t308 = (*((T1 + a509)) - *((T1 + a511)));
        s205 = ((0.3090169943749474*t307) + (0.95105651629515353*t308));
        s206 = ((0.95105651629515353*t307) - (0.3090169943749474*t308));
        a512 = (a496 + 48);
        a513 = (a496 + 49);
        a514 = (a496 + 108);
        a515 = (a496 + 109);
        t309 = (*((T1 + a512)) + *((T1 + a514)));
        t310 = (*((T1 + a513)) + *((T1 + a515)));
        t311 = (*((T1 + a512)) - *((T1 + a514)));
        t312 = (*((T1 + a513)) - *((T1 + a515)));
        s207 = ((0.80901699437494745*t311) + (0.58778525229247314*t312));
        s208 = ((0.58778525229247314*t311) - (0.80901699437494745*t312));
        t313 = (t297 + t309);
        t314 = (t298 + t310);
        t315 = (t297 - t309);
        t316 = (t298 - t310);
        t317 = (t305 + t301);
        t318 = (t306 + t302);
        t319 = (t305 - t301);
        t320 = (t306 - t302);
        s209 = ((t293 + (0.3090169943749474*t313)) - (0.80901699437494745*t317));
        s210 = ((t294 + (0.3090169943749474*t314)) - (0.80901699437494745*t318));
        s211 = ((t293 - (0.80901699437494745*t313)) + (0.3090169943749474*t317));
        s212 = ((t294 - (0.80901699437494745*t314)) + (0.3090169943749474*t318));
        s213 = ((0.58778525229247314*t320) - (0.95105651629515353*t316));
        s214 = ((0.95105651629515353*t315) - (0.58778525229247314*t319));
        s215 = ((0.58778525229247314*t316) + (0.95105651629515353*t320));
        s216 = ((0.58778525229247314*t315) + (0.95105651629515353*t319));
        *((Y + a496)) = (t293 + t313 + t317);
        *((Y + a497)) = (t294 + t314 + t318);
        *((Y + a504)) = (s209 + s213);
        *((Y + a505)) = (s210 + s214);
        *((Y + a510)) = (s209 - s213);
        *((Y + a511)) = (s210 - s214);
        *((Y + a512)) = (s211 - s215);
        *((Y + a513)) = (s212 + s216);
        *((Y + a502)) = (s211 + s215);
        *((Y + a503)) = (s212 - s216);
        t321 = (s201 - s207);
        t322 = (s202 + s208);
        t323 = (s201 + s207);
        t324 = (s202 - s208);
        t325 = (s203 - s205);
        t326 = (s206 + s204);
        t327 = (s205 + s203);
        t328 = (s206 - s204);
        s217 = (((0.3090169943749474*t321) - (0.80901699437494745*t325)) + t295);
        s218 = (((0.3090169943749474*t322) - (0.80901699437494745*t326)) + t296);
        s219 = (((0.3090169943749474*t325) - (0.80901699437494745*t321)) + t295);
        s220 = (((0.3090169943749474*t326) - (0.80901699437494745*t322)) + t296);
        s221 = ((0.58778525229247314*t328) - (0.95105651629515353*t324));
        s222 = ((0.95105651629515353*t323) + (0.58778525229247314*t327));
        s223 = ((0.58778525229247314*t324) + (0.95105651629515353*t328));
        s224 = ((0.58778525229247314*t323) - (0.95105651629515353*t327));
        *((Y + a500)) = (t295 + t321 + t325);
        *((Y + a501)) = (t322 + t326 + t296);
        *((Y + a508)) = (s217 + s221);
        *((Y + a509)) = (s218 + s222);
        *((Y + a514)) = (s217 - s221);
        *((Y + a515)) = (s218 - s222);
        *((Y + a498)) = (s219 - s223);
        *((Y + a499)) = (s220 + s224);
        *((Y + a506)) = (s219 + s223);
        *((Y + a507)) = (s220 - s224);
    }
}

void destroy_fftx_idftbat_1_60_1d() {
    /* skip */
}
