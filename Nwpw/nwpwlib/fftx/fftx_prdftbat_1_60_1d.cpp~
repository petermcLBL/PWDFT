
/*
 * This code was generated by Spiral 8.3.1d01, www.spiral.net
 */

#include <omega64.h>
static double D1[40];

extern "C" {
void init_fftx_prdftbat_1_60_1d() {
    for(int i1 = 0; i1 <= 1; i1++) {
        for(int i9 = 0; i9 <= 4; i9++) {
            D1[((20*i1) + (4*i9))] = cospi((((double )(2*((59*(i1 + 1))*i9))) / 60));
            D1[(1 + (20*i1) + (4*i9))] = sinpi((((double )(2*((59*(i1 + 1))*i9))) / 60));
            D1[(2 + (20*i1) + (4*i9))] = cospi((((double )(2*((59*(i1 + 1))*(5 + i9)))) / 60));
            D1[(3 + (20*i1) + (4*i9))] = sinpi((((double )(2*((59*(i1 + 1))*(5 + i9)))) / 60));
        }
    }
}
}

extern "C" {
void fftx_prdftbat_1_60_1d(double  *Y, double  *X) {
    static double T1[80];
    for(int i2 = 0; i2 <= 9; i2++) {
        double s35, s36, s37, s38, s39, s40, s41, s42, 
                t79, t80;
        int a52, a53, a54, a55, a56, a57;
        a52 = (i2 + 20);
        a53 = (i2 + 40);
        t79 = (*((X + a52)) + *((X + a53)));
        s35 = (*((X + i2)) + t79);
        s36 = (*((X + i2)) - (0.5*t79));
        s37 = (0.8660254037844386*(*((X + a52)) - *((X + a53))));
        a54 = (i2 + 10);
        a55 = (i2 + 30);
        a56 = (i2 + 50);
        t80 = (*((X + a55)) + *((X + a56)));
        s38 = (*((X + a54)) + t80);
        s39 = (*((X + a54)) - (0.5*t80));
        s40 = (0.8660254037844386*(*((X + a55)) - *((X + a56))));
        a57 = (8*i2);
        *((T1 + a57)) = (s35 + s38);
        *((1 + T1 + a57)) = 0.0;
        *((6 + T1 + a57)) = (s35 - s38);
        *((7 + T1 + a57)) = 0.0;
        s41 = ((0.5*s39) - (0.8660254037844386*s40));
        s42 = ((0.8660254037844386*s39) + (0.5*s40));
        *((2 + T1 + a57)) = (s36 + s41);
        *((3 + T1 + a57)) = -((s37 + s42));
        *((4 + T1 + a57)) = (s36 - s41);
        *((5 + T1 + a57)) = (s37 - s42);
    }
    double s100, s101, s102, s89, s90, s91, s92, s93, 
            s94, s95, s96, s97, s98, s99, t121, t122, 
            t123, t124, t125, t126, t127, t128;
    t121 = (*((T1 + 16)) + *((T1 + 64)));
    t122 = (*((T1 + 16)) - *((T1 + 64)));
    t123 = (*((T1 + 48)) + *((T1 + 32)));
    t124 = (*((T1 + 48)) - *((T1 + 32)));
    s89 = (*(T1) + t121 + t123);
    s90 = ((*(T1) + (0.3090169943749474*t121)) - (0.80901699437494745*t123));
    s91 = ((*(T1) - (0.80901699437494745*t121)) + (0.3090169943749474*t123));
    s92 = ((0.58778525229247314*t124) - (0.95105651629515353*t122));
    s93 = ((0.58778525229247314*t122) + (0.95105651629515353*t124));
    t125 = (*((T1 + 24)) + *((T1 + 72)));
    t126 = (*((T1 + 24)) - *((T1 + 72)));
    t127 = (*((T1 + 56)) + *((T1 + 40)));
    t128 = (*((T1 + 56)) - *((T1 + 40)));
    s94 = (*((T1 + 8)) + t125 + t127);
    s95 = ((*((T1 + 8)) + (0.3090169943749474*t125)) - (0.80901699437494745*t127));
    s96 = ((*((T1 + 8)) - (0.80901699437494745*t125)) + (0.3090169943749474*t127));
    s97 = ((0.58778525229247314*t128) - (0.95105651629515353*t126));
    s98 = ((0.58778525229247314*t126) + (0.95105651629515353*t128));
    *(Y) = (s89 + s94);
    *((Y + 1)) = 0.0;
    *((Y + 60)) = (s89 - s94);
    *((Y + 61)) = 0.0;
    s99 = ((0.80901699437494745*s95) + (0.58778525229247314*s97));
    s100 = ((0.80901699437494745*s97) - (0.58778525229247314*s95));
    *((Y + 12)) = (s90 + s99);
    *((Y + 13)) = (s92 + s100);
    *((Y + 48)) = (s90 - s99);
    *((Y + 49)) = (s100 - s92);
    s101 = ((0.3090169943749474*s96) - (0.95105651629515353*s98));
    s102 = ((0.95105651629515353*s96) + (0.3090169943749474*s98));
    *((Y + 24)) = (s91 + s101);
    *((Y + 25)) = -((s93 + s102));
    *((Y + 36)) = (s91 - s101);
    *((Y + 37)) = (s93 - s102);
    for(int i1 = 0; i1 <= 1; i1++) {
        double s263, s264, s265, s266, s267, s268, s269, s270, 
                s271, s272, s273, s274, s275, s276, s277, s278, 
                s279, s280, s281, s282, s283, s284, s285, s286, 
                s287, s288, s289, s290, s291, s292, s293, s294, 
                s295, s296, s297, s298, s299, s300, s301, s302, 
                s303, s304, s305, s306, t269, t270, t271, t272, 
                t273, t274, t275, t276, t277, t278, t279, t280, 
                t281, t282, t283, t284, t285, t286, t287, t288, 
                t289, t290, t291, t292, t293, t294, t295, t296, 
                t297, t298, t299, t300, t301, t302, t303, t304;
        int a623, a624, a625, a626, a627, a628, a629, a630, 
                a631, a632, a633, a634, a635, a636, a637, a638, 
                a639, a640, a641, a642, a643, a644, a645, a646, 
                a647, a648, a649, a650, a651, a652, a653, a654, 
                a655, a656, a657, a658, a659, a660, a661, a662, 
                a663, a664;
        a623 = (2*i1);
        a624 = (a623 + 2);
        a625 = (a623 + 3);
        a626 = (a623 + 42);
        a627 = (a623 + 43);
        a628 = (20*i1);
        a629 = (a628 + 1);
        s263 = ((*((D1 + a628))**((T1 + a624))) - (*((D1 + a629))**((T1 + a625))));
        s264 = ((*((D1 + a629))**((T1 + a624))) + (*((D1 + a628))**((T1 + a625))));
        a630 = (a628 + 2);
        a631 = (a628 + 3);
        s265 = ((*((D1 + a630))**((T1 + a626))) - (*((D1 + a631))**((T1 + a627))));
        s266 = ((*((D1 + a631))**((T1 + a626))) + (*((D1 + a630))**((T1 + a627))));
        t269 = (s263 + s265);
        t270 = (s264 + s266);
        t271 = (s263 - s265);
        t272 = (s264 - s266);
        a632 = (a623 + 10);
        a633 = (a623 + 11);
        a634 = (a623 + 50);
        a635 = (a623 + 51);
        a636 = (a628 + 4);
        a637 = (a628 + 5);
        s267 = ((*((D1 + a636))**((T1 + a632))) - (*((D1 + a637))**((T1 + a633))));
        s268 = ((*((D1 + a637))**((T1 + a632))) + (*((D1 + a636))**((T1 + a633))));
        a638 = (a628 + 6);
        a639 = (a628 + 7);
        s269 = ((*((D1 + a638))**((T1 + a634))) - (*((D1 + a639))**((T1 + a635))));
        s270 = ((*((D1 + a639))**((T1 + a634))) + (*((D1 + a638))**((T1 + a635))));
        t273 = (s267 + s269);
        t274 = (s268 + s270);
        t275 = (s267 - s269);
        t276 = (s268 - s270);
        s271 = ((0.80901699437494745*t275) + (0.58778525229247314*t276));
        s272 = ((0.80901699437494745*t276) - (0.58778525229247314*t275));
        a640 = (a623 + 18);
        a641 = (a623 + 19);
        a642 = (a623 + 58);
        a643 = (a623 + 59);
        a644 = (a628 + 8);
        a645 = (a628 + 9);
        s273 = ((*((D1 + a644))**((T1 + a640))) - (*((D1 + a645))**((T1 + a641))));
        s274 = ((*((D1 + a645))**((T1 + a640))) + (*((D1 + a644))**((T1 + a641))));
        a646 = (a628 + 10);
        a647 = (a628 + 11);
        s275 = ((*((D1 + a646))**((T1 + a642))) - (*((D1 + a647))**((T1 + a643))));
        s276 = ((*((D1 + a647))**((T1 + a642))) + (*((D1 + a646))**((T1 + a643))));
        t277 = (s273 + s275);
        t278 = (s274 + s276);
        t279 = (s273 - s275);
        t280 = (s274 - s276);
        s277 = ((0.3090169943749474*t279) + (0.95105651629515353*t280));
        s278 = ((0.3090169943749474*t280) - (0.95105651629515353*t279));
        a648 = (a623 + 26);
        a649 = (a623 + 27);
        a650 = (a623 + 66);
        a651 = (a623 + 67);
        a652 = (a628 + 12);
        a653 = (a628 + 13);
        s279 = ((*((D1 + a652))**((T1 + a648))) - (*((D1 + a653))**((T1 + a649))));
        s280 = ((*((D1 + a653))**((T1 + a648))) + (*((D1 + a652))**((T1 + a649))));
        a654 = (a628 + 14);
        a655 = (a628 + 15);
        s281 = ((*((D1 + a654))**((T1 + a650))) - (*((D1 + a655))**((T1 + a651))));
        s282 = ((*((D1 + a655))**((T1 + a650))) + (*((D1 + a654))**((T1 + a651))));
        t281 = (s279 + s281);
        t282 = (s280 + s282);
        t283 = (s279 - s281);
        t284 = (s280 - s282);
        s283 = ((0.95105651629515353*t284) - (0.3090169943749474*t283));
        s284 = ((0.95105651629515353*t283) + (0.3090169943749474*t284));
        a656 = (a623 + 34);
        a657 = (a623 + 35);
        a658 = (a623 + 74);
        a659 = (a623 + 75);
        a660 = (a628 + 16);
        a661 = (a628 + 17);
        s285 = ((*((D1 + a660))**((T1 + a656))) - (*((D1 + a661))**((T1 + a657))));
        s286 = ((*((D1 + a661))**((T1 + a656))) + (*((D1 + a660))**((T1 + a657))));
        a662 = (a628 + 18);
        a663 = (a628 + 19);
        s287 = ((*((D1 + a662))**((T1 + a658))) - (*((D1 + a663))**((T1 + a659))));
        s288 = ((*((D1 + a663))**((T1 + a658))) + (*((D1 + a662))**((T1 + a659))));
        t285 = (s285 + s287);
        t286 = (s286 + s288);
        t287 = (s285 - s287);
        t288 = (s286 - s288);
        s289 = ((0.58778525229247314*t288) - (0.80901699437494745*t287));
        s290 = ((0.58778525229247314*t287) + (0.80901699437494745*t288));
        t289 = (t273 + t285);
        t290 = (t274 + t286);
        t291 = (t273 - t285);
        t292 = (t274 - t286);
        t293 = (t281 + t277);
        t294 = (t282 + t278);
        t295 = (t281 - t277);
        t296 = (t282 - t278);
        s291 = ((t269 + (0.3090169943749474*t289)) - (0.80901699437494745*t293));
        s292 = ((t270 + (0.3090169943749474*t290)) - (0.80901699437494745*t294));
        s293 = ((t269 - (0.80901699437494745*t289)) + (0.3090169943749474*t293));
        s294 = ((t270 - (0.80901699437494745*t290)) + (0.3090169943749474*t294));
        s295 = ((0.95105651629515353*t292) - (0.58778525229247314*t296));
        s296 = ((0.58778525229247314*t295) - (0.95105651629515353*t291));
        s297 = ((0.58778525229247314*t292) + (0.95105651629515353*t296));
        s298 = ((0.58778525229247314*t291) + (0.95105651629515353*t295));
        *((Y + a624)) = (t269 + t289 + t293);
        *((Y + a625)) = (t270 + t290 + t294);
        *((Y + a648)) = (s291 + s295);
        *((Y + a649)) = (s292 + s296);
        a664 = -(a623);
        *((22 + Y + a664)) = (s291 - s295);
        *((23 + Y + a664)) = (s296 - s292);
        *((Y + a634)) = (s293 + s297);
        *((Y + a635)) = (s294 - s298);
        *((46 + Y + a664)) = (s293 - s297);
        *((47 + Y + a664)) = -((s294 + s298));
        t297 = (s271 + s289);
        t298 = (s272 - s290);
        t299 = (s271 - s289);
        t300 = (s272 + s290);
        t301 = (s283 + s277);
        t302 = (s278 - s284);
        t303 = (s283 - s277);
        t304 = (s284 + s278);
        s299 = (((0.3090169943749474*t297) - (0.80901699437494745*t301)) + t271);
        s300 = (((0.3090169943749474*t298) - (0.80901699437494745*t302)) + t272);
        s301 = (((0.3090169943749474*t301) - (0.80901699437494745*t297)) + t271);
        s302 = (((0.3090169943749474*t302) - (0.80901699437494745*t298)) + t272);
        s303 = ((0.95105651629515353*t300) + (0.58778525229247314*t304));
        s304 = ((0.58778525229247314*t303) - (0.95105651629515353*t299));
        s305 = ((0.58778525229247314*t300) - (0.95105651629515353*t304));
        s306 = ((0.58778525229247314*t299) + (0.95105651629515353*t303));
        *((14 + Y + a623)) = (t297 + t301 + t271);
        *((15 + Y + a623)) = (t272 + t298 + t302);
        *((38 + Y + a623)) = (s299 + s303);
        *((39 + Y + a623)) = (s300 + s304);
        *((10 + Y + a664)) = (s299 - s303);
        *((11 + Y + a664)) = (s304 - s300);
        *((58 + Y + a664)) = (s301 + s305);
        *((59 + Y + a664)) = (s306 - s302);
        *((34 + Y + a664)) = (s301 - s305);
        *((35 + Y + a664)) = -((s302 + s306));
    }
    double s359, s360, s361, s362, s363, s364, s365, s366, 
            s367, s368, s369, s370, s371, s372, s373, s374, 
            t345, t346, t347, t348, t349, t350, t351, t352;
    s359 = ((0.95105651629515353**((T1 + 14))) - (0.3090169943749474**((T1 + 54))));
    s360 = ((0.3090169943749474**((T1 + 14))) + (0.95105651629515353**((T1 + 54))));
    s361 = ((0.3090169943749474**((T1 + 38))) - (0.95105651629515353**((T1 + 78))));
    s362 = ((0.95105651629515353**((T1 + 38))) + (0.3090169943749474**((T1 + 78))));
    t345 = (s359 + s361);
    t346 = (s360 + s362);
    t347 = (s359 - s361);
    t348 = (s362 - s360);
    s363 = ((0.58778525229247314**((T1 + 30))) - (0.80901699437494745**((T1 + 70))));
    s364 = ((0.80901699437494745**((T1 + 30))) + (0.58778525229247314**((T1 + 70))));
    s365 = ((0.80901699437494745**((T1 + 22))) - (0.58778525229247314**((T1 + 62))));
    s366 = ((0.58778525229247314**((T1 + 22))) + (0.80901699437494745**((T1 + 62))));
    t349 = (s363 + s365);
    t350 = (s364 + s366);
    t351 = (s363 - s365);
    t352 = (s366 - s364);
    s367 = ((*((T1 + 6)) + (0.3090169943749474*t345)) - (0.80901699437494745*t349));
    s368 = ((0.80901699437494745*t350) - (*((T1 + 46)) + (0.3090169943749474*t346)));
    s369 = ((*((T1 + 6)) - (0.80901699437494745*t345)) + (0.3090169943749474*t349));
    s370 = (((0.80901699437494745*t346) - *((T1 + 46))) - (0.3090169943749474*t350));
    s371 = ((0.95105651629515353*t348) - (0.58778525229247314*t352));
    s372 = ((0.58778525229247314*t351) - (0.95105651629515353*t347));
    s373 = ((0.58778525229247314*t348) + (0.95105651629515353*t352));
    s374 = ((0.58778525229247314*t347) + (0.95105651629515353*t351));
    *((Y + 6)) = (*((T1 + 6)) + t345 + t349);
    *((Y + 7)) = -((*((T1 + 46)) + t346 + t350));
    *((Y + 30)) = (s367 + s371);
    *((Y + 31)) = (s368 + s372);
    *((Y + 18)) = (s367 - s371);
    *((Y + 19)) = (s372 - s368);
    *((Y + 54)) = (s369 + s373);
    *((Y + 55)) = (s370 - s374);
    *((Y + 42)) = (s369 - s373);
    *((Y + 43)) = -((s370 + s374));
}
}

extern "C" {
void destroy_fftx_prdftbat_1_60_1d() {
    /* skip */
}
}
